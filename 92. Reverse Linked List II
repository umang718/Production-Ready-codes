92. Reverse Linked List II

Problem Description : 

Given the head of a singly linked list and two integers left and right where left <= right, reverse the nodes of the list from position left to position right, and return the reversed list.

Solution : 

ListNode* reverseBetween(ListNode* head, int left, int right) 
    {
        if(!head)
            return NULL;
        
        ListNode *dummyNode = new ListNode(0);
        ListNode *pre = dummyNode;
        dummyNode -> next =head;
        for(int i=0;i<left-1;i++)
        {
            pre=pre->next;
            
        }
        
        ListNode *current = pre->next;
        
        for(int i=0;i<right - left;i++)
        {
            ListNode *temp = pre->next;
            pre->next = current ->next;
            current -> next = current ->next->next;
            
            pre->next ->next =temp;
            
        }
        return dummyNode ->next;
        
    }
    
    Time complexity : O(n)
